workflows:
  # react-native-ios:
  #   name: iOS Workflow
  #   max_build_duration: 60
  #   instance_type: mac_mini
  #   environment:
  #     node: latest
  #     xcode: latest
  #     cocoapods: default
  #   scripts:
  #     - name: Install npm dependencies
  #       script: npm install --frozen-lockfile
  #     - name: Install CocoaPods dependencies
  #       script: |
  #         cd ios
  #         pod repo update
  #         pod install
  #     - name: xCode build
  #       script: |
  #         cd ios
  #         xcodebuild clean archive -workspace testCiCdReactNative.xcworkspace -scheme testCiCdReactNative -archivePath testCiCdReactNative.xcarchive CODE_SIGNING_ALLOWED=NO | xcpretty
  #   artifacts:
  #     - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

  # react-native-android-dev:
  #   name: Android Workflow
  #   # `mac_pro` - Building on Mac Pro is a paid feature. Please enable billing to run builds on Mac Pro.
  #   instance_type: mac_mini
  #   environment:
  #     node: latest
  #   cache:
  #     cache_paths:
  #       - ~/.gradle/caches
  #       - ~/.cache/npm/v6
  #   triggering:
  #     events:
  #       - push
  #       - tag
  #       - pull_request
  #     branch_patterns:
  #       - pattern: dev
  #         include: true
  #         source: true
  #     # cancel_previous_builds: false
  #   scripts:
  #     - ./tomsir export dev
  #     - npm install && npx jetifier
  #     - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
  #     - cd android && ./gradlew assembleRelease
  #   artifacts:
  #     - android/app/build/outputs/**/*.apk

  react-native-android-prod:
    name: Android Workflow
    # `mac_pro` - Building on Mac Pro is a paid feature. Please enable billing to run builds on Mac Pro.
    instance_type: mac_mini
    environment:
      node: latest
    cache:
      cache_paths:
        - ~/.gradle/caches
        - ~/.cache/npm/v6
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: prod
          include: true
          source: true
    scripts:
      - ./tomsir export prod
      - npm install && npx jetifier
      - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
      - cd android && ./gradlew assembleRelease
    artifacts:
      - android/app/build/outputs/**/*.apk
